{"version":3,"sources":["components/Index.js","components/Character.js","components/Filter.js","components/Films.js","App.js","serviceWorker.js","index.js"],"names":["Index","state","fetchrespon","characters","show","scrfunc","window","innerHeight","pageYOffset","document","body","offsetHeight","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","nextres","nextdata","newchar","wrap","_context","prev","next","_this","setState","fetch","sent","json","toConsumableArray","concat","results","console","log","length","count","removeEventListener","stop","this","apply","arguments","fetchNext","_this2","_ref2","_callee2","respon","data","_context2","fetchData","addEventListener","id","people","map","person","react_default","createElement","Link","className","key","to","name","src","Component","Character","character","props","match","params","gender","height","mass","hair_color","skin_color","eye_color","birth_year","Filter","films","onChange","e","history","push","target","value","responFilms","dataFilms","filmList","film","title","withRouter","Films","charactersurl","characterlist","i","char","back","filmLength","_this3","location","_this4","charId","slice","App","HashRouter","components_Filter","Route","exact","path","component","Boolean","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7bb15e36.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\nclass Index extends Component{\n\t state = {\n    fetchrespon: '',\n    characters: [],\n    show: 'hide'\n  }\n\n  componentWillUnmount(){\n    window.removeEventListener('scroll', this.scrfunc)\n  }\n\n  scrfunc = ()=>{\n    if ((window.innerHeight + window.pageYOffset) === document.body.offsetHeight+20) {\n        let fetchNext = async ()=>{\n          this.setState({\n            show: 'loader'\n          })\n          const nextres = await fetch(this.state.fetchrespon.next)\n          const nextdata = await nextres.json()\n\n          let characters = [...this.state.characters]\n          let newchar = characters.concat([...nextdata.results])\n          console.log(newchar)\n          this.setState({\n            fetchrespon: nextdata,\n            characters: newchar,\n            show: 'hide'\n          });\n\n          if(newchar.length >= this.state.fetchrespon.count){\n           window.removeEventListener('scroll', this.scrfunc)\n          }\n        }\n        \n        fetchNext()\n        console.log(\"you're at the bottom of the page\");\n      }\n  }\n\n  componentDidMount(){\n    let fetchData = async () =>{\n      const respon = await fetch('https://swapi.co/api/people?format=json')\n      const data = await respon.json();\n      this.setState({\n        fetchrespon: data,\n        characters : data.results\n      })\n      \n    }\n    fetchData();\n\n    let scrfunc = ()=>{\n      \n    }\n\n    window.addEventListener('scroll', this.scrfunc)\n    \n  }\n\n\n  render() {\n    // console.log(this.state.fetchrespon);\n    // console.log(this.state.characters);\n    let id = 0;\n    let people = this.state.characters.length ? (\n      this.state.characters.map(person => {\n        id++;\n        return (\n        \t<Link className=\"index__link\" key={id} to={'/character/' + id}>\n            <div className=\"index__content\">\n              <h1>{person.name}</h1>\n              <p>click for character info</p>\n            </div>\n         </Link>\n        )\n      })\n    ) : (\n    //placeholder before data from swapi arrived\n      <div>Loading...</div>\n    )\n\n    return (\n      <div className=\"index\">\n        <div className=\"index__wraper\">\n           {people}\n        </div>\n        <img src=\"https://loading.io/spinners/coolors/lg.palette-rotating-ring-loader.gif\" className={this.state.show}/>\n      </div>\n    );\n  }\n}\n\nexport default Index;","import React, { Component } from 'react';\n\n\n\nclass Character extends Component {\n\tstate = {\n\t\tcharacter: ''\n\t}\n\n\tcomponentDidMount(){\n\t\tlet id = this.props.match.params.id\n\t\tlet fetchData = async ()=>{\n\t\t\tconst respon = await fetch('https://swapi.co/api/people/'+ id + '/?format=json')\n\t\t\tconst data = await respon.json();\n\t\t\tthis.setState({\n\t\t\t\tcharacter : data\n\t\t\t})\n\t\t}\n\t\tfetchData()\n\t\t\n\t}\n\n\trender(){\n\t\tlet person = this.state.character ? (\n\t\t\t<div className=\"character__content\">\n\t\t\t\t<p>Name: {this.state.character.name}</p>\n\t\t\t\t<p>Gender: {this.state.character.gender}</p>\n\t\t\t\t<p>Height: {this.state.character.height}</p>\n\t\t\t\t<p>Mass: {this.state.character.mass}</p>\n\t\t\t\t<p>Hair Color: {this.state.character.hair_color}</p>\n\t\t\t\t<p>Skin Color: {this.state.character.skin_color}</p>\n\t\t\t\t<p>Eye Color: {this.state.character.eye_color}</p>\n\t\t\t\t<p>Birth Year: {this.state.character.birth_year}</p>\n\t\t\t</div>\n\t\t\t\n\t\t) : (\n\t\t\t<p>loading...</p>\n\t\t)\n\t\treturn(\n\t\t <div className=\"character\">\n\t\t \t\n\t\t \t\t{person}\n\t\t \n\t\t \t\n\t\t </div>\n\t\t)\n\t}\n}\n\nexport default Character;\n","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom'\n\n\nclass Filter extends Component {\n\tstate = {\n\t\tfilms: ''\n\t}\n\n\tcomponentDidMount(){\n\t\tlet fetchData = async ()=>{\n\t\t\tconst responFilms = await fetch('https://swapi.co/api/films/?format=json')\n\t\t\tconst dataFilms = await responFilms.json();\n\t\t\tthis.setState({\n\t\t\t\tfilms : dataFilms.results\n\t\t\t})\n\t\t}\n\t\tfetchData()\n\t\t//console.log(this.props)\n\t}\n\n\tonChange = (e)=>{\n\t\tthis.props.history.push(e.target.value)\n\t}\n\n\trender(){\n\t\tlet id = 0;\n\t\tlet filmList = this.state.films ? (\n\t\t\tthis.state.films.map(film => {\n\t\t\t\tid++;\n\t\t\t\treturn(\n\t\t\t\t\t<option key={id} value={'/films/' + id}>\n\t\t\t\t\t\t{film.title}\n\t\t\t\t\t</option>\n\t\t\t\t)\n\t\t\t})\n\t\t) : (\n\t\t\t<option></option>\n\t\t)\n\n\t\treturn(\n\t\t\t<div className=\"filter\">\n\t\t\t\t<p>Filter By Films</p>\n\t\t\t\t<select onChange={this.onChange}>\n\t\t\t\t\t{filmList}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t)\n\n\t}\n}\n\nexport default withRouter(Filter);","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\n\nclass Films extends Component {\n\tstate = {\n\t\tcharactersurl: '',\n\t\tcharacterlist: []\n\t}\n\n\tcomponentDidMount(){\n\t\tlet id = this.props.match.params.id\n\t\tlet filmLength = async () => {\n\t\t\tconst respon = await fetch ('https://swapi.co/api/films/' + id + '/?format=json'  );\n\t\t\tconst data = await respon.json();\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tcharactersurl : data.characters,\n\t\t\t});\n\t\t\tlet name = []\n\t\t\tfor(let i=0; i<this.state.charactersurl.length; i++){\n\t\t\t\tlet char = await fetch(this.state.charactersurl[i]+ '?format=json');\n\t\t\t\tlet back = await char.json();\n\n\t\t\t\tname.push(back.name);\n\t\t\t\tthis.setState({\n\t\t\t\t\tcharacterlist: name\n\t\t\t\t})\n\t\t\t}\n\t\t\t//this.state.characterlist.push(9)\n\t\t\t\n\t\t\t//console.log(this.state.characterlist)\n\t\t}\n\n\t\tfilmLength()\n\t}\n\n\tcomponentDidUpdate(prev){\n\t\tif (this.props.location !== prev.location) {\n      \t\n      let id = this.props.match.params.id\n\t\tlet filmLength = async () => {\n\t\t\tconst respon = await fetch ('https://swapi.co/api/films/' + id + '/?format=json'  );\n\t\t\tconst data = await respon.json();\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tcharactersurl : data.characters,\n\t\t\t});\n\t\t\tlet name = []\n\t\t\tfor(let i=0; i<this.state.charactersurl.length; i++){\n\t\t\t\tlet char = await fetch(this.state.charactersurl[i]+ '?format=json');\n\t\t\t\tlet back = await char.json();\n\n\t\t\t\tname.push(back.name);\n\t\t\t\tthis.setState({\n\t\t\t\t\tcharacterlist: name\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tfilmLength()\n\t\t\n    \t}\n\t}\n\n\trender(){\n\t\t//console.log(this.state.characterlist)\n\t\tlet id= 0;\n\t\tlet charId = 0;\n\t\tlet characters = this.state.charactersurl.length ? (\n\t\t\tthis.state.charactersurl.map(person =>{\n\t\t\t\tid = person.slice(28);\n\t\t\t\tcharId++\n\t\t\t\treturn(\n\t\t\t\t\t<Link key={id} to={'/character/' + id}>\n\t\t\t\t\t\t<div className=\"films__content\">\n\t\t\t\t\t\t\t<h1>{this.state.characterlist[charId-1]}</h1>\n\t\t\t\t\t\t\t<p>Click for character info</p>\n\t\t\t\t\t\t</div>\n\t\t         </Link>\n\t\t\t\t)\n\t\t\t\t\n\t\t\t})\n\t\t) : (\n\t\t\t<div>Loading...</div>\n\t\t)\n\t\treturn(\n\t\t\t<div className=\"films\">\n\t\t\t\t{characters}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Films;","import React, { Component } from 'react';\nimport { HashRouter, Route} from 'react-router-dom'\nimport {Link} from 'react-router-dom'\nimport Index from './components/Index'\nimport Character from './components/Character'\nimport Filter from './components/Filter'\nimport Films from './components/Films'\n\nclass App extends Component {\n render(){\n  return(\n    <HashRouter>\n      <div className=\"root\">\n        <div className=\"root__top\">\n          <Link className=\"root__home\" to=\"/\"><img src=\"http://webiconspng.com/wp-content/uploads/2017/09/Star-Wars-PNG-Image-83517.png\"/></Link>\n          <h1>Star Wars Character List</h1>\n          <Filter/>\n        </div>\n        <Route exact path=\"/\" component={Index}></Route>\n        <Route path=\"/character/:id\" component={Character}></Route>\n        <Route path=\"/films/:id\" component={Films}></Route>\n      </div>\n    </HashRouter>\n  )\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}